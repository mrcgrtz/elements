{"version":3,"file":"main.805cb489.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAiCA;;;;;;;;;ACDA;;;;;;;;;;;;AAcA;;AAEA;;;;;AAMA;AACA;;;;;;;;AAWA;;;;AAMA;AACA;;;;AAOA;;;AAKA;;;;AAIA;AACA;;AAEA;;;;;AAOA;;;;;;;;ACnEA;;;;;;AAQA;;ACVA;AACA;AACA;AACA;;;;;AAOA;;AAEA;AACA;AACA;AACA;;;;;AAOA;;;AAeA;AACA;;;;AAcA;AACA;;;;;AAeA;AACA;;AAcA;;;;AC5FA","sources":["webpack://@mrcgrtz/elements/./src/button/index.tsx","webpack://@mrcgrtz/elements/./src/chat/index.tsx","webpack://@mrcgrtz/elements/./src/datetime/index.tsx","webpack://@mrcgrtz/elements/./src/hamburger-button/index.tsx","webpack://@mrcgrtz/elements/./src/logo/index.tsx"],"sourcesContent":["/**\n * Button Component\n * @author Marc Görtz <https://marcgoertz.de/>\n */\n\nimport React, { type ButtonHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  margin: 0;\n  padding: 0.25rem 1rem;\n  border: 0;\n  font-size: inherit;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n    'Segoe UI Symbol';\n  line-height: inherit;\n  color: white;\n  background-color: lightgrey;\n  box-sizing: border-box;\n  appearance: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: dodgerblue;\n  }\n`;\n\ntype Props = ButtonHTMLAttributes<HTMLButtonElement>;\n\n// eslint-disable-next-line react/jsx-props-no-spreading\nconst Button = (props: Props) => <StyledButton {...props} />;\n\nButton.defaultProps = {\n  type: 'button',\n};\n\nexport default Button;\n","/**\n * Chat Component\n * @author Marc Görtz <https://marcgoertz.de/>\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { format, formatRelative } from 'date-fns';\nimport { ISO_DATE } from '../constants/date-formats';\n\ntype Props = {\n  history?: Array<{\n    content: string;\n    name?: string;\n    timestamp?: Date;\n    isMe?: boolean;\n    isEmoji?: boolean;\n    isAction?: boolean;\n  }>;\n};\n\nconst List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  list-style: none;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n    'Segoe UI Symbol';\n  line-height: 1.25;\n`;\n\nconst Action = styled.li`\n  align-self: center;\n  margin: 0.5rem 0;\n  text-align: center;\n  max-width: 80%;\n  font-size: 0.75rem;\n  font-weight: bold;\n  color: gray;\n\n  & i {\n    font-style: normal;\n  }\n`;\n\nconst Bubble = styled.li`\n  position: relative;\n  align-self: ${(p: { isMe: boolean }): string =>\n    p.isMe ? 'flex-end' : 'flex-start'};\n  padding: 0.5rem;\n  border-radius: 0.75rem;\n  outline: 0;\n  max-width: 60%;\n  color: ${(p: { isMe: boolean }): string => (p.isMe ? 'white' : 'black')};\n  background-color: ${(p: { isMe: boolean }): string =>\n    p.isMe ? 'dodgerblue' : 'gainsboro'};\n  box-sizing: border-box;\n  & + li {\n    margin-top: 0.5rem;\n  }\n  &:active time {\n    display: block;\n  }\n`;\n\nconst EmojiBubble = styled(Bubble)`\n  padding: 0;\n  font-size: 4em;\n  background-color: transparent;\n`;\n\nconst Name = styled.span`\n  display: ${(p: { hidden?: boolean }): string =>\n    p.hidden ? 'none' : 'block'};\n  margin-bottom: 0.25em;\n  font-size: 0.75rem;\n  font-weight: bold;\n`;\n\nconst Quote = styled.q`\n  display: block;\n  quotes: none;\n`;\n\nconst Time = styled.time`\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: ${(p: { isMe: boolean }): string => (p.isMe ? '' : '0.666667em')};\n  right: ${(p: { isMe: boolean }): string => (p.isMe ? '0.666667em' : '')};\n  margin-top: 0.25em;\n  text-align: ${(p: { isMe: boolean }): string => (p.isMe ? 'right' : 'left')};\n  font-size: 0.75rem;\n  color: gray;\n  opacity: 0.75;\n  white-space: nowrap;\n`;\n\nconst Chat = ({ history }: Props): JSX.Element | null => {\n  if (!history || history.length === 0) {\n    return null;\n  }\n\n  return (\n    <List>\n      {history.map(\n        ({\n          content,\n          name,\n          timestamp,\n          isEmoji = false,\n          isMe = false,\n          isAction = false,\n        }) => {\n          if (isAction) {\n            return <Action key={content}>{content}</Action>;\n          }\n          if (isEmoji) {\n            return (\n              <EmojiBubble\n                key={content}\n                isMe={isMe}\n                tabIndex={timestamp ? 0 : undefined}\n              >\n                {name && <Name hidden>{name}</Name>}\n                <Quote>{content}</Quote>\n                {timestamp && (\n                  <Time isMe={isMe} dateTime={format(timestamp, ISO_DATE)}>\n                    {formatRelative(timestamp, new Date())}\n                  </Time>\n                )}\n              </EmojiBubble>\n            );\n          }\n          return (\n            <Bubble\n              key={content}\n              isMe={isMe}\n              tabIndex={timestamp ? 0 : undefined}\n            >\n              {name && <Name>{name}</Name>}\n              <Quote>{content}</Quote>\n              {timestamp && (\n                <Time isMe={isMe} dateTime={format(timestamp, ISO_DATE)}>\n                  {formatRelative(timestamp, new Date())}\n                </Time>\n              )}\n            </Bubble>\n          );\n        }\n      )}\n    </List>\n  );\n};\n\nChat.defaultProps = {\n  history: [],\n};\n\nexport default Chat;\n","/**\n * DateTime Component\n * @author Marc Görtz <https://marcgoertz.de/>\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport format from 'date-fns/format';\nimport de from 'date-fns/locale/de';\nimport {\n  ISO_DATE_TIME,\n  HOUR,\n  MINUTE,\n  TIME,\n  DATE,\n  DAY,\n} from '../constants/date-formats';\n\ntype Props = {\n  dateTime: Date | number;\n};\n\nconst Wrapper = styled.time`\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n    'Segoe UI Symbol';\n  font-size: 0.75rem;\n  line-height: 1.5;\n  color: dimgrey;\n  white-space: nowrap;\n`;\n\nconst Svg = styled.svg`\n  margin-right: 0.75ex;\n  width: 1em;\n  height: 1em;\n  vertical-align: -2px;\n  fill: currentColor;\n`;\n\nconst getTimeOfDay = (hour: string) => {\n  switch (Number(hour)) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n      return 'Nachts am';\n    case 4:\n    case 5:\n    case 6:\n      return 'Verdammt früh am Morgen des';\n    case 7:\n    case 8:\n    case 9:\n      return 'Morgens am';\n    case 10:\n      return 'Am frühen Vormittag des';\n    case 11:\n      return 'Vormittags am';\n    case 12:\n    case 13:\n      return 'Zur Mittagszeit am';\n    case 14:\n      return 'Am frühen Nachmittag des';\n    case 15:\n    case 16:\n      return 'Nachmittags am';\n    case 17:\n      return 'Am späten Nachmittag des';\n    case 18:\n    case 19:\n      return 'Am frühen Abend des';\n    case 20:\n    case 21:\n      return 'Abends am';\n    case 22:\n      return 'Spätabends am';\n    case 23:\n    default:\n      return 'Kurz vor Mitternacht am';\n  }\n};\n\nconst transformHour = (hour: string) => {\n  const degreesPerHour = 360 / 12;\n  return Number(hour) * degreesPerHour;\n};\n\nconst transformMinute = (minute: string) => {\n  const degreesPerMinute = 360 / 60;\n  return Number(minute) * degreesPerMinute;\n};\n\nconst DateTime = ({ dateTime, ...rest }: Props): JSX.Element => {\n  const f = (as: string) => format(dateTime, as, { locale: de });\n\n  return (\n    <Wrapper\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      dateTime={f(ISO_DATE_TIME)}\n      title={`${f(DAY)}, der ${f(DATE)} um ${f(TIME)} Uhr`}\n    >\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        viewBox=\"0 0 12 12\"\n        aria-hidden=\"true\"\n      >\n        <title>{f(TIME)} Uhr</title>\n        <circle\n          cx=\"6\"\n          cy=\"6\"\n          r=\"5.425\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.15\"\n          fill=\"none\"\n        />\n        <line\n          x1=\"6\"\n          y1=\"6\"\n          x2=\"6\"\n          y2=\"4\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"1.35\"\n          fill=\"none\"\n          transform={`rotate(${transformHour(f(HOUR))} 6 6)`}\n        />\n        <line\n          x1=\"6\"\n          y1=\"6\"\n          x2=\"6\"\n          y2=\"2.5\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"1.35\"\n          fill=\"none\"\n          transform={`rotate(${transformMinute(f(MINUTE))} 6 6)`}\n        />\n      </Svg>\n      {getTimeOfDay(f(HOUR))} {f(DATE)}\n    </Wrapper>\n  );\n};\n\nexport default DateTime;\n","/**\n * Hamburger Button Component\n * @author Marc Görtz <https://marcgoertz.de/>\n */\n\nimport React from 'react';\nimport type { ComponentType } from 'react';\nimport styled from 'styled-components';\n\ntype Position = {\n  position: {\n    top?: string;\n    bottom?: string;\n    left?: string;\n    right?: string;\n  };\n};\n\ntype LinesProps = {\n  isX: boolean;\n};\n\ntype Props = {\n  label?: string;\n  labelActive?: string;\n  id?: string;\n} & Position;\n\nconst Input = styled.input`\n  position: absolute;\n  top: ${(p: Position): string => p.position.top || ''};\n  bottom: ${(p: Position): string => p.position.bottom || ''};\n  left: ${(p: Position): string => p.position.left || ''};\n  right: ${(p: Position): string => p.position.right || ''};\n  width: 1px;\n  height: 1px;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n`;\n\nconst Hamburger = styled.label`\n  position: absolute;\n  top: ${(p: Position): string => p.position.top || ''};\n  bottom: ${(p: Position): string => p.position.bottom || ''};\n  left: ${(p: Position): string => p.position.left || ''};\n  right: ${(p: Position): string => p.position.right || ''};\n  z-index: 1;\n  width: 2em;\n  height: 1.5em;\n  cursor: pointer;\n`;\n\nconst LinesCommon = `\n  display: block;\n  position: absolute;\n  border-radius: 4px;\n  width: 100%;\n  height: 4px;\n  background-color: currentColor;\n  transition-property: transform;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n`;\n\nconst Lines = styled.span`\n  top: 50%;\n  margin-top: -2px;\n  ${LinesCommon}\n  ${(p: LinesProps): string =>\n    p.isX\n      ? `\n    transform: rotate(225deg);\n    transition-delay: 0.12s;\n    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  `\n      : `\n    transition-duration: 0.2s;\n    transition-timing-function: ease;\n  `}\n\n  &::before {\n    content: '';\n    ${LinesCommon}\n    ${(p: LinesProps): string =>\n      p.isX\n        ? `\n      top: 0;\n      opacity: 0;\n      transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;\n    `\n        : `\n      top: -10px;\n      transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;\n    `}\n  }\n\n  &::after {\n    content: '';\n    ${LinesCommon}\n    ${(p: LinesProps): string =>\n      p.isX\n        ? `\n      bottom: 0;\n      transform: rotate(-90deg);\n      transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n    `\n        : `\n      bottom: -10px;\n      transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n    `}\n  }\n` as ComponentType<LinesProps>;\n\nconst HamburgerButton = ({\n  label,\n  labelActive,\n  id,\n  position,\n}: Props): JSX.Element => {\n  const [checked, toggle] = React.useState(false);\n  return (\n    <>\n      <Input\n        type=\"checkbox\"\n        id={id}\n        position={position}\n        checked={checked}\n        onChange={(): void => toggle(!checked)}\n      />\n      <Hamburger\n        htmlFor={id}\n        aria-label={checked ? labelActive : label}\n        position={position}\n      >\n        <Lines isX={checked} />\n      </Hamburger>\n    </>\n  );\n};\n\nHamburgerButton.defaultProps = {\n  label: 'Menü anzeigen',\n  labelActive: 'Menü ausblenden',\n  id: 'toggle',\n};\n\nexport default HamburgerButton;\n","/**\n * Logo Component\n * @author Marc Görtz <https://marcgoertz.de/>\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  title?: string;\n  url?: string;\n  urlRelations?: string[];\n  solidColor?: string;\n};\n\nconst Svg = styled.svg`\n  width: 340px;\n  height: 190px;\n  vertical-align: bottom;\n`;\n\nconst Logo = ({ title, url, urlRelations, solidColor }: Props): JSX.Element => (\n  <a\n    href={url}\n    rel={urlRelations?.join(' ')}\n    className=\"h-card\"\n    aria-label={title}\n  >\n    <Svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 340 190\"\n      role=\"img\"\n      aria-labelledby=\"logo-title\"\n      fill={solidColor}\n    >\n      <title className=\"p-name\" id=\"logo-title\">\n        {title}\n      </title>\n      {solidColor ? (\n        <path d=\"M236.305 68.36c0-19.988 16.07-36.19 35.894-36.19 19.825 0 35.895 16.202 35.895 36.19 0 19.987-16.07 36.19-35.895 36.19-19.824 0-35.894-16.203-35.894-36.19zm-31.906-1.005s.06 4.371.18 6.031c2.551 35.408 31.851 63.334 67.62 63.334a67.082 67.082 0 0 0 35.58-10.159c-2.383 17.66-17.411 31.27-35.58 31.27-4.194 0-12.002-2.017-12.169-2.131a35.582 35.582 0 0 1-6.805-3.328c-1.236-.345-2.574-.573-3.958-.573-2.955 0-5.636.686-7.608 1.639l-3.36 3.387-13.54 13.652C236.987 182.554 253.73 190 272.199 190 309.645 190 340 159.395 340 121.64V68.36C340 30.605 309.645 0 272.2 0c-20.725 0-39.277 9.374-51.713 24.147C208.14 9.38 189.657 0 169.002 0c-20.305 0-38.51 9.063-50.85 23.398C105.813 9.063 87.607 0 67.303 0 30.131 0 0 30.38 0 67.857v35.688c0 18.322 14.731 33.175 32.903 33.175V67.355c0-19.433 15.624-35.186 34.898-35.186 17.012 0 31.178 12.272 34.269 28.515-.246 2.357-.37 42.861-.37 42.861 0 18.322 14.732 33.175 32.904 33.175V67.355c0-19.433 15.624-35.186 34.897-35.186 19.274 0 34.898 15.753 34.898 35.186zm0 6.031h.18c-.12-1.66-.18 0-.18 0z\" />\n      ) : (\n        <>\n          <defs>\n            <linearGradient id=\"logo-a\" x1=\"100%\" x2=\"3%\" y1=\"57%\" y2=\"65%\">\n              <stop offset=\"0%\" stopColor=\"#d12b97\" />\n              <stop offset=\"100%\" stopColor=\"#c82a91\" />\n            </linearGradient>\n            <linearGradient id=\"logo-b\" x1=\"29%\" x2=\"84%\" y1=\"83%\" y2=\"75%\">\n              <stop offset=\"0%\" stopColor=\"#b22581\" />\n              <stop offset=\"100%\" stopColor=\"#da4da9\" />\n            </linearGradient>\n            <linearGradient id=\"logo-c\" x1=\"60%\" x2=\"34%\" y1=\"14%\" y2=\"98%\">\n              <stop offset=\"0%\" stopColor=\"#601445\" />\n              <stop offset=\"100%\" stopColor=\"#bc2788\" />\n            </linearGradient>\n            <linearGradient id=\"logo-d\" x1=\"14%\" x2=\"42%\" y1=\"54%\" y2=\"-13%\">\n              <stop offset=\"0%\" stopColor=\"#8f1d67\" />\n              <stop offset=\"100%\" stopColor=\"#c5298f\" />\n            </linearGradient>\n            <linearGradient id=\"logo-e\" x1=\"36%\" x2=\"29%\" y1=\"13%\" y2=\"13%\">\n              <stop offset=\"0%\" stopColor=\"#99206e\" />\n              <stop offset=\"100%\" stopColor=\"#b82685\" />\n            </linearGradient>\n            <linearGradient id=\"logo-f\" x1=\"96%\" x2=\"38%\" y1=\"5%\" y2=\"72%\">\n              <stop offset=\"0%\" stopColor=\"#6d164e\" />\n              <stop offset=\"100%\" stopColor=\"#a62277\" />\n            </linearGradient>\n          </defs>\n          <mask id=\"logo-mask\" fill=\"#fff\">\n            <path d=\"M236.305 68.36c0-19.988 16.07-36.19 35.894-36.19 19.825 0 35.895 16.202 35.895 36.19 0 19.987-16.07 36.19-35.895 36.19-19.824 0-35.894-16.203-35.894-36.19zm-31.906-1.005s.06 4.371.18 6.031c2.551 35.408 31.851 63.334 67.62 63.334a67.082 67.082 0 0 0 35.58-10.159c-2.383 17.66-17.411 31.27-35.58 31.27-4.194 0-12.002-2.017-12.169-2.131a35.582 35.582 0 0 1-6.805-3.328c-1.236-.345-2.574-.573-3.958-.573-2.955 0-5.636.686-7.608 1.639l-3.36 3.387-13.54 13.652C236.987 182.554 253.73 190 272.199 190 309.645 190 340 159.395 340 121.64V68.36C340 30.605 309.645 0 272.2 0c-20.725 0-39.277 9.374-51.713 24.147C208.14 9.38 189.657 0 169.002 0c-20.305 0-38.51 9.063-50.85 23.398C105.813 9.063 87.607 0 67.303 0 30.131 0 0 30.38 0 67.857v35.688c0 18.322 14.731 33.175 32.903 33.175V67.355c0-19.433 15.624-35.186 34.898-35.186 17.012 0 31.178 12.272 34.269 28.515-.246 2.357-.37 42.861-.37 42.861 0 18.322 14.732 33.175 32.904 33.175V67.355c0-19.433 15.624-35.186 34.897-35.186 19.274 0 34.898 15.753 34.898 35.186zm0 6.031h.18c-.12-1.66-.18 0-.18 0z\" />\n          </mask>\n          <g mask=\"url(#logo-mask)\">\n            <path\n              fill=\"url(#logo-a)\"\n              d=\"M42 43L26.71 190h152.3l-4.343-112L42 43z\"\n            />\n            <path fill=\"url(#logo-b)\" d=\"M340 94v96H226l114-96z\" />\n            <path\n              fill=\"#941f6a\"\n              d=\"M174 77l4.21 113h48.4L340 94.575V54.85L174 77z\"\n            />\n            <path fill=\"#d4319c\" d=\"M0 178l29 12H0v-12z\" />\n            <path fill=\"#de5db1\" d=\"M0 164l28 26-28-11v-15z\" />\n            <path\n              fill=\"url(#logo-c)\"\n              d=\"M0 164.19L28 190 43 43 0 59.355V164.19z\"\n            />\n            <path fill=\"#881c61\" d=\"M0 22l43 22L0 60V22z\" />\n            <path fill=\"#aa237a\" d=\"M0 23.5L43 44 9.035 0H0v23.5z\" />\n            <path fill=\"#bf288a\" d=\"M8 0h70L43 44 8 0z\" />\n            <path fill=\"url(#logo-d)\" d=\"M77 0h65l33 79L42 44 77 0z\" />\n            <path fill=\"url(#logo-e)\" d=\"M141 0h105l-72 78-33-78z\" />\n            <path fill=\"url(#logo-f)\" d=\"M245 0h95v56L173 78l72-78z\" />\n            <path fill=\"#e685c4\" d=\"M230 0h16l-18 18 2-18z\" />\n            <path fill=\"#b52683\" d=\"M246 0h24l-42 18 18-18z\" />\n          </g>\n        </>\n      )}\n    </Svg>\n  </a>\n);\n\nLogo.defaultProps = {\n  title: 'Marc Görtz',\n  url: 'https://marcgoertz.de/',\n  urlRelations: ['start', 'me'],\n  solidColor: '',\n};\n\nexport default Logo;\n"],"names":[],"sourceRoot":""}